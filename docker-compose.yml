version: "2.3"
services:

  api: &api
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    depends_on:
      db:
        condition: service_healthy
    ports: []
    env_file: .env

  sidekiq:
    <<: *api
    container_name: sidekiq
    ports: []
    volumes:
      - .:/code/
    command: "sh /code/start_sidekiq.sh"
    depends_on:
      redis_master:
        condition: service_healthy

  api_development:
    <<: *api
    container_name: api_development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    volumes:
      - .:/code/

  db:
    image: postgres:12-alpine
    container_name: db
    volumes:
      - ./persistance/postgres:/var/lib/postgresql/data/
      - ./logs/postgres:/var/log/postgres
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d weather_app"]
      interval: 5s
      timeout: 1s
      retries: 10

  redis_master:
    image: redis:latest
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - ./persistance/redis:/data
      - ./logs/redis:/var/log/redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ", "ping"]
      interval: 5s
      timeout: 1s
      retries: 10